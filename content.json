{"meta":{"title":"SubmitHealth","subtitle":"Blog","description":null,"author":"SubmitHealth","url":"http://blog.submithealth.com"},"pages":[{"title":"","date":"2016-08-20T21:03:25.805Z","updated":"2016-08-20T15:19:49.029Z","comments":true,"path":"assets/Why-Are-Some-Healthcare-Providers-Charging-So-Much-More-Than-Others/css/bubble_chart.css","permalink":"http://blog.submithealth.com/assets/Why-Are-Some-Healthcare-Providers-Charging-So-Much-More-Than-Others/css/bubble_chart.css","excerpt":"","text":".button a, a:visited, a:active { color: #444; } .button { min-width: 130px; padding: 6px 10px; border-radius: 5px; cursor: pointer; text-align: center; font-size: 13px; border: 1px solid #999; text-decoration: none !important; } .button.active { background: #aaa; color: #fff; } #vis { width: 940px; height: 600px; clear: both; margin-bottom: 10px; } #toolbar { margin-top: 10px; } .year { font-size: 21px; fill: #aaa; cursor: default; } .tooltip { position: absolute; top: 100px; left: 100px; -moz-border-radius:5px; border-radius: 5px; border: 2px solid #000; background: #fff; opacity: .9; color: black; padding: 10px; width: 300px; font-size: 12px; z-index: 10; } .tooltip .title { font-size: 13px; } .tooltip .name { font-weight:bold; } .footer { text-align: center; }"},{"title":"","date":"2016-08-20T21:03:38.341Z","updated":"2016-08-14T16:36:18.773Z","comments":true,"path":"assets/Why-Are-Some-Healthcare-Providers-Charging-So-Much-More-Than-Others/css/reset.css","permalink":"http://blog.submithealth.com/assets/Why-Are-Some-Healthcare-Providers-Charging-So-Much-More-Than-Others/css/reset.css","excerpt":"","text":"/* HTML5 âœ° Boilerplate * ==|== normalize ========================================================== */ article, aside, details, figcaption, figure, footer, header, hgroup, nav, section { display: block; } audio, canvas, video { display: inline-block; *display: inline; *zoom: 1; } audio:not([controls]) { display: none; } [hidden] { display: none; } html { font-size: 100%; overflow-y: scroll; -webkit-text-size-adjust: 100%; -ms-text-size-adjust: 100%; } body { margin: 0; font-size: 13px; line-height: 1.231; } body, button, input, select, textarea { font-family: sans-serif; color: #222; } ::-moz-selection { background: #fe57a1; color: #fff; text-shadow: none; } ::selection { background: #fe57a1; color: #fff; text-shadow: none; } a { color: #00e; } a:visited { color: #551a8b; } a:hover { color: #06e; } a:focus { outline: thin dotted; } a:hover, a:active { outline: 0; } abbr[title] { border-bottom: 1px dotted; } b, strong { font-weight: bold; } blockquote { margin: 1em 40px; } dfn { font-style: italic; } hr { display: block; height: 1px; border: 0; border-top: 1px solid #ccc; margin: 1em 0; padding: 0; } ins { background: #ff9; color: #000; text-decoration: none; } mark { background: #ff0; color: #000; font-style: italic; font-weight: bold; } pre, code, kbd, samp { font-family: monospace, monospace; _font-family: 'courier new', monospace; font-size: 1em; } pre { white-space: pre; white-space: pre-wrap; word-wrap: break-word; } q { quotes: none; } q:before, q:after { content: \"\"; content: none; } small { font-size: 85%; } sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-align: baseline; } sup { top: -0.5em; } sub { bottom: -0.25em; } ul, ol { margin: 1em 0; padding: 0 0 0 40px; } dd { margin: 0 0 0 40px; } nav ul, nav ol { list-style: none; list-style-image: none; margin: 0; padding: 0; } img { border: 0; -ms-interpolation-mode: bicubic; vertical-align: middle; } svg:not(:root) { overflow: hidden; } figure { margin: 0; } form { margin: 0; } fieldset { border: 0; margin: 0; padding: 0; } label { cursor: pointer; } legend { border: 0; *margin-left: -7px; padding: 0; } button, input, select, textarea { font-size: 100%; margin: 0; vertical-align: baseline; *vertical-align: middle; } button, input { line-height: normal; *overflow: visible; } table button, table input { *overflow: auto; } button, input[type=\"button\"], input[type=\"reset\"], input[type=\"submit\"] { cursor: pointer; -webkit-appearance: button; } input[type=\"checkbox\"], input[type=\"radio\"] { box-sizing: border-box; } input[type=\"search\"] { -webkit-appearance: textfield; -moz-box-sizing: content-box; -webkit-box-sizing: content-box; box-sizing: content-box; } input[type=\"search\"]::-webkit-search-decoration { -webkit-appearance: none; } button::-moz-focus-inner, input::-moz-focus-inner { border: 0; padding: 0; } textarea { overflow: auto; vertical-align: top; resize: vertical; } input:valid, textarea:valid { } input:invalid, textarea:invalid { background-color: #f0dddd; } table { border-collapse: collapse; border-spacing: 0; } td { vertical-align: top; } /* ==|== primary styles ===================================================== Author: ========================================================================== */ /* ==|== non-semantic helper classes ======================================== */ .ir { display: block; border: 0; text-indent: -999em; overflow: hidden; background-color: transparent; background-repeat: no-repeat; text-align: left; direction: ltr; } .ir br { display: none; } .hidden { display: none !important; visibility: hidden; } .visuallyhidden { border: 0; clip: rect(0 0 0 0); height: 1px; margin: -1px; overflow: hidden; padding: 0; position: absolute; width: 1px; } .visuallyhidden.focusable:active, .visuallyhidden.focusable:focus { clip: auto; height: auto; margin: 0; overflow: visible; position: static; width: auto; } .invisible { visibility: hidden; } .clearfix:before, .clearfix:after { content: \"\"; display: table; } .clearfix:after { clear: both; } .clearfix { zoom: 1; } /* ==|== media queries ====================================================== */ @media only screen and (min-width: 480px) { } @media only screen and (min-width: 768px) { } /* ==|== print styles ======================================================= */ @media print { * { background: transparent !important; color: black !important; text-shadow: none !important; filter:none !important; -ms-filter: none !important; } a, a:visited { text-decoration: underline; } a[href]:after { content: \" (\" attr(href) \")\"; } abbr[title]:after { content: \" (\" attr(title) \")\"; } .ir a:after, a[href^=\"javascript:\"]:after, a[href^=\"#\"]:after { content: \"\"; } pre, blockquote { border: 1px solid #999; page-break-inside: avoid; } thead { display: table-header-group; } tr, img { page-break-inside: avoid; } img { max-width: 100% !important; } @page { margin: 0.5cm; } p, h2, h3 { orphans: 3; widows: 3; } h2, h3 { page-break-after: avoid; } }"},{"title":"","date":"2016-08-20T22:17:58.297Z","updated":"2016-08-20T22:17:58.297Z","comments":true,"path":"assets/Why-Are-Some-Healthcare-Providers-Charging-So-Much-More-Than-Others/src/bubble_chart.js","permalink":"http://blog.submithealth.com/assets/Why-Are-Some-Healthcare-Providers-Charging-So-Much-More-Than-Others/src/bubble_chart.js","excerpt":"","text":"/* bubbleChart creation function. Returns a function that will * instantiate a new bubble chart given a DOM element to display * it in and a dataset to visualize. * * Organization and style inspired by: * https://bost.ocks.org/mike/chart/ * */ function bubbleChart() { // Constants for sizing var width = 725; var height = 600; // tooltip for mouseover functionality var tooltip = floatingTooltip('sh_tooltip', 240); // Locations to move bubbles towards, depending // on which view mode is selected. var center = { x: width / 2, y: height / 2 }; var yearCenters = { WA: { x: width / 3, y: height / 3 }, // { x: width / 3, y: height / 2 }, CA: { x: width / 3, y: 2 * height / 3 }, // { x: width / 2, y: height / 2 }, NY: { x: 2 * width / 3, y: height / 3 }, // { x: 2 * width / 3, y: height / 2 }, FL: { x: 2 * width / 3, y: 2 * height / 3 } }; // X locations of the year titles. var yearsTitleX = { WA: 50, CA: 50, // width / 2, NY: width - 50, FL: width - 50 }; // Y locations of the year titles. var yearsTitleY = { WA: 40, CA: 450, NY: 40, FL: 450 }; // Used when setting up force and // moving around nodes var damper = 0.102; // These will be set in create_nodes and create_vis var svg = null; var bubbles = null; var nodes = []; // Charge function that is called for each node. // Charge is proportional to the diameter of the // circle (which is stored in the radius attribute // of the circle's associated data. // This is done to allow for accurate collision // detection with nodes of different sizes. // Charge is negative because we want nodes to repel. // Dividing by 8 scales down the charge to be // appropriate for the visualization dimensions. function charge(d) { return -Math.pow(d.radius, 2.0) / 8; } // Here we create a force layout and // configure it to use the charge function // from above. This also sets some contants // to specify how the force layout should behave. // More configuration is done below. var force = d3.layout.force() .size([width, height]) .charge(charge) .gravity(-0.01) .friction(0.9); // Nice looking colors - no reason to buck the trend var fillColor = d3.scale.ordinal() .domain(['low', 'medium', 'high']) .range(['#9FB8AD', '#C287E8', '#FF8360']); // Sizes bubbles based on their area instead of raw radius var radiusScale = d3.scale.pow() .exponent(0.5) .range([2, 35]); /* * This data manipulation function takes the raw data from * the CSV file and converts it into an array of node objects. * Each node will store data and visualization values to visualize * a bubble. * * rawData is expected to be an array of data objects, read in from * one of d3's loading functions like d3.csv. * * This function returns the new node array, with a node in that * array for each element in the rawData input. */ function createNodes(rawData) { // Use map() to convert raw data into node data. // Checkout http://learnjsdata.com/ for more on // working with data. var myNodes = rawData.map(function (d) { return { id: d.id, radius: radiusScale(+d.Average_Estimated_Submitted_Charges), value: d.Average_Estimated_Submitted_Charges, name: d.Provider_City, org: d.Outpatient_Services, group: d.Provider_City, year: d.Provider_State, x: Math.random() * 900, y: Math.random() * 800 }; }); // sort them to prevent occlusion of smaller nodes. myNodes.sort(function (a, b) { return b.value - a.value; }); return myNodes; } /* * Main entry point to the bubble chart. This function is returned * by the parent closure. It prepares the rawData for visualization * and adds an svg element to the provided selector and starts the * visualization creation process. * * selector is expected to be a DOM element or CSS selector that * points to the parent element of the bubble chart. Inside this * element, the code will add the SVG continer for the visualization. * * rawData is expected to be an array of data objects as provided by * a d3 loading function like d3.csv. */ var chart = function chart(selector, rawData) { // Use the max Average_Estimated_Submitted_Charges in the data as the max in the scale's domain // note we have to ensure the Average_Estimated_Submitted_Charges is a number by converting it // with `+`. var maxAmount = d3.max(rawData, function (d) { return +d.Average_Estimated_Submitted_Charges; }); radiusScale.domain([0, maxAmount]); nodes = createNodes(rawData); // Set the force's nodes to our newly created nodes array. force.nodes(nodes); // Create a SVG element inside the provided selector // with desired size. svg = d3.select(selector) .append('svg') .attr('width', width) .attr('height', height) .attr('viewBox', '0 0 725 600') .attr('preserveAspectRatio', 'xMidYMid meet'); // Bind nodes data to what will become DOM elements to represent them. bubbles = svg.selectAll('.bubble') .data(nodes, function (d) { return d.id; }); // Create new circle elements each with class `bubble`. // There will be one circle.bubble for each object in the nodes array. // Initially, their radius (r attribute) will be 0. bubbles.enter().append('circle') .classed('bubble', true) .attr('r', 0) .attr('fill', function (d) { return fillColor(d.group); }) .attr('stroke', function (d) { return d3.rgb(fillColor(d.group)).darker(); }) .attr('stroke-width', 1) .style('opacity','.7') .on('mouseover', showDetail) .on('mouseout', hideDetail); // Fancy transition to make bubbles appear, ending with the // correct radius bubbles.transition() .duration(2000) .attr('r', function (d) { return d.radius; }); // Set initial layout to single group. groupBubbles(); }; /* * Sets visualization in \"single group mode\". * The year labels are hidden and the force layout * tick function is set to move all nodes to the * center of the visualization. */ function groupBubbles() { hideYears(); force.on('tick', function (e) { bubbles.each(moveToCenter(e.alpha)) .attr('cx', function (d) { return d.x; }) .attr('cy', function (d) { return d.y; }); }); force.start(); } /* * Helper function for \"single group mode\". * Returns a function that takes the data for a * single node and adjusts the position values * of that node to move it toward the center of * the visualization. * * Positioning is adjusted by the force layout's * alpha parameter which gets smaller and smaller as * the force layout runs. This makes the impact of * this moving get reduced as each node gets closer to * its destination, and so allows other forces like the * node's charge force to also impact final location. */ function moveToCenter(alpha) { return function (d) { d.x = d.x + (center.x - d.x) * damper * alpha; d.y = d.y + (center.y - d.y) * damper * alpha; }; } /* * Sets visualization in \"split by year mode\". * The year labels are shown and the force layout * tick function is set to move nodes to the * yearCenter of their data's year. */ function splitBubbles() { showYears(); force.on('tick', function (e) { bubbles.each(moveToYears(e.alpha)) .attr('cx', function (d) { return d.x; }) .attr('cy', function (d) { return d.y; }); }); force.start(); } /* * Helper function for \"split by year mode\". * Returns a function that takes the data for a * single node and adjusts the position values * of that node to move it the year center for that * node. * * Positioning is adjusted by the force layout's * alpha parameter which gets smaller and smaller as * the force layout runs. This makes the impact of * this moving get reduced as each node gets closer to * its destination, and so allows other forces like the * node's charge force to also impact final location. */ function moveToYears(alpha) { return function (d) { if (yearCenters[d.year]){ var target = yearCenters[d.year]; } else { var target = { x: width / 2, y: height / 2 }; } d.x = d.x + (target.x - d.x) * damper * alpha * 1.1; d.y = d.y + (target.y - d.y) * damper * alpha * 1.1; }; } /* * Hides Year title displays. */ function hideYears() { svg.selectAll('.year').remove(); } /* * Shows Year title displays. */ function showYears() { // Another way to do this would be to create // the year texts once and then just hide them. var yearsData = d3.keys(yearsTitleX); var years = svg.selectAll('.year') .data(yearsData); years.enter().append('text') .attr('class', 'year') .attr('x', function (d) { return yearsTitleX[d]; }) .attr('y', function (d) { return yearsTitleY[d]; }) .attr('text-anchor', 'middle') .text(function (d) { return d; }); } /* * Function called on mouseover to display the * details of a bubble in the tooltip. */ function showDetail(d) { // change outline to indicate hover state. d3.select(this).attr('stroke', 'black'); var content = 'Provider Location: ' + d.name + \", \" + d.year + '' + 'Amount Charged: $' + addCommas(parseFloat(Math.round(d.value * 100) / 100).toFixed(2)) + '' + 'Services Performed: ' + d.org + ''; tooltip.showTooltip(content, d3.event); } /* * Hides tooltip */ function hideDetail(d) { // reset outline d3.select(this) .attr('stroke', d3.rgb(fillColor(d.group)).darker()); tooltip.hideTooltip(); } /* * Externally accessible function (this is attached to the * returned chart function). Allows the visualization to toggle * between \"single group\" and \"split by year\" modes. * * displayName is expected to be a string and either 'year' or 'all'. */ chart.toggleDisplay = function (displayName) { if (displayName === 'year') { splitBubbles(); } else { groupBubbles(); } }; // return the chart function from closure. return chart; } /* * Below is the initialization code as well as some helper functions * to create a new bubble chart instance, load the data, and display it. */ var myBubbleChart = bubbleChart(); /* * Function called once data is loaded from CSV. * Calls bubble chart function to display inside #vis div. */ function display(error, data) { if (error) { console.log(error); } myBubbleChart('#vis', data); } /* * Sets up the layout buttons to allow for toggling between view modes. */ function setupButtons() { d3.select('#toolbar') .selectAll('.button') .on('click', function () { // Remove active class from all buttons d3.selectAll('.button').classed('active', false); // Find the button just clicked var button = d3.select(this); // Set it as the active button button.classed('active', true); // Get the id of the button var buttonId = button.attr('id'); // Toggle the bubble chart based on // the currently clicked button. myBubbleChart.toggleDisplay(buttonId); }); } /* * Helper function to convert a number into a string * and add commas to it to improve presentation. */ function addCommas(nStr) { nStr += ''; var x = nStr.split('.'); var x1 = x[0]; var x2 = x.length > 1 ? '.' + x[1] : ''; var rgx = /(\\d+)(\\d{3})/; while (rgx.test(x1)) { x1 = x1.replace(rgx, '$1' + ',' + '$2'); } return x1 + x2; } // Load the data. d3.csv('http://blog.submithealth.com/assets/Why-Are-Some-Healthcare-Providers-Charging-So-Much-More-Than-Others/data/APC_Excision_2014.csv', display); // setup the buttons. setupButtons();"},{"title":"","date":"2016-08-20T21:04:00.397Z","updated":"2016-08-14T16:36:18.773Z","comments":true,"path":"assets/Why-Are-Some-Healthcare-Providers-Charging-So-Much-More-Than-Others/src/tooltip.js","permalink":"http://blog.submithealth.com/assets/Why-Are-Some-Healthcare-Providers-Charging-So-Much-More-Than-Others/src/tooltip.js","excerpt":"","text":"/* * Creates tooltip with provided id that * floats on top of visualization. * Most styling is expected to come from CSS * so check out bubble_chart.css for more details. */ function floatingTooltip(tooltipId, width) { // Local variable to hold tooltip div for // manipulation in other functions. var tt = d3.select('body') .append('div') .attr('class', 'tooltip') .attr('id', tooltipId) .style('pointer-events', 'none'); // Set a width if it is provided. if (width) { tt.style('width', width); } // Initially it is hidden. hideTooltip(); /* * Display tooltip with provided content. * * content is expected to be HTML string. * * event is d3.event for positioning. */ function showTooltip(content, event) { tt.style('opacity', 1.0) .html(content); updatePosition(event); } /* * Hide the tooltip div. */ function hideTooltip() { tt.style('opacity', 0.0); } /* * Figure out where to place the tooltip * based on d3 mouse event. */ function updatePosition(event) { var xOffset = 20; var yOffset = 10; var ttw = tt.style('width'); var tth = tt.style('height'); var wscrY = window.scrollY; var wscrX = window.scrollX; var curX = (document.all) ? event.clientX + wscrX : event.pageX; var curY = (document.all) ? event.clientY + wscrY : event.pageY; var ttleft = ((curX - wscrX + xOffset * 2 + ttw) > window.innerWidth) ? curX - ttw - xOffset * 2 : curX + xOffset; if (ttleft < wscrX + xOffset) { ttleft = wscrX + xOffset; } var tttop = ((curY - wscrY + yOffset * 2 + tth) > window.innerHeight) ? curY - tth - yOffset * 2 : curY + yOffset; if (tttop < wscrY + yOffset) { tttop = curY + yOffset; } tt.style({ top: tttop + 'px', left: ttleft + 'px' }); } return { showTooltip: showTooltip, hideTooltip: hideTooltip, updatePosition: updatePosition }; }"}],"posts":[{"title":"Why are some Healthcare Providers Charging so much more than Others?","slug":"Why-Are-Some-Healthcare-Providers-Charging-So-Much-More-Than-Others","date":"2016-08-19T02:48:13.000Z","updated":"2016-08-20T23:36:15.285Z","comments":true,"path":"2016/08/19/Why-Are-Some-Healthcare-Providers-Charging-So-Much-More-Than-Others/","link":"","permalink":"http://blog.submithealth.com/2016/08/19/Why-Are-Some-Healthcare-Providers-Charging-So-Much-More-Than-Others/","excerpt":"","text":"Hereâ€™s a bubble comparing the average costs of a Level 1 Excision/Biopsy for several providers. AllSelect States var resetCSSElement = document.createElement(\"link\"); resetCSSElement.rel = \"stylesheet\"; resetCSSElement.href = \"http://blog.submithealth.com/assets/Why-Are-Some-Healthcare-Providers-Charging-So-Much-More-Than-Others/css/reset.css\"; document.head.appendChild(resetCSSElement); var bubbleCSSElement = document.createElement(\"link\"); bubbleCSSElement.rel = \"stylesheet\"; bubbleCSSElement.href = \"http://blog.submithealth.com/assets/Why-Are-Some-Healthcare-Providers-Charging-So-Much-More-Than-Others/css/bubble_chart.css\"; document.head.appendChild(bubbleCSSElement); Some providers charge as much as $15,000 where others charge less than $100. Of all industries that have ever existed, Healthcare has by far one of the most bizarre and confusing billing systems. Generally, they consists of a specially trained billing coder who compiles a list of services based on your various interactions with your doctor. The whole process can be quite subjective and unfortunately you usually wonâ€™t have a clue what the costs mean, or how they baseline with other practices. The data above, provided by the Centers for Medicare and Medicaid uses a Level 1 Excision/Biopsy as an example to compare several providers by average total charges as well as the total services rendered. We thought it would be interesting to plot in an interactive bubble chart to further explore and the visualizations are quite alarming in terms of how much costs and services vary. You can explore the interactive bubble chart by scrolling over the bubbles or click Select States to get a sense of how much costs can vary within a few example states. Why does the Cost of a Biopsy Differ So Much from Practice to Practice?We donâ€™t know for certain. Each provider charges for services in their own ways. Some facilities may run with a lot more overhead than necessary for your procedure. What Medicare and Your Insurance PaysWhatâ€™s even more Bizarre about medical billing is that Medicare has already decided what they will actually pay in return for these services, which generally totals about $200 to $400. In many instances this is far less than what the provider is billing them, in which case the provider just wonâ€™t get paid. In some even stranger cases, what Medicare pays is more than the provider is charging, and the provider seems to get a little extra than theyâ€™re asking for. Similarly, insurance typically negotiates a price far less than what the provider bills, which makes the provider charge seem like some meaningless department store MSRP. But what if you donâ€™t have insurance, or you have a crappy high deductable plan? What you Need to KnowIf youâ€™re lucky enough to have Medicare or a good insurance policy, you may never even see or know these charges exist. If you have no insurance, or a high deductable or consumer plan, you could be hit with an extremely high bill. More appalling, your doctor visit may be extremely more expensive than the practice just down the road. Even more appalling, you could be suckered into paying that full MSRP, where insurance and Medicare would only pay a fraction of that amount. If this were any other industry, we would recognize red flags all over these billing practices, but we are far too accepting of our healthcare system. Itâ€™s time for a change. If you aggree, make sure to take action, ask around for quotes for non life threatening procedures, and check out how SubmitHealth for consumers can help you. CreditsThanks to: D3.js for helping us visualize and explore this data with their awesome js library. vladhamâ€™s tutorial because havenâ€™t fully learned d3.js yet, but heâ€™s provided an awesome example to get started. CMS for gathering and providing data to the public.","categories":[],"tags":[{"name":"Consumer Health, Cost Comparisons","slug":"Consumer-Health-Cost-Comparisons","permalink":"http://blog.submithealth.com/tags/Consumer-Health-Cost-Comparisons/"}]},{"title":"Picking A Medical Insurance Plan","slug":"Picking-A-Medical-Insurance-Plan","date":"2016-08-03T04:57:03.000Z","updated":"2016-08-07T03:29:33.457Z","comments":true,"path":"2016/08/03/Picking-A-Medical-Insurance-Plan/","link":"","permalink":"http://blog.submithealth.com/2016/08/03/Picking-A-Medical-Insurance-Plan/","excerpt":"","text":"Only you can decide the insurance that is right for you, but here are some thoughts that can hopefully help. So What the Heck is Insurance Really?Medical insurance is sort of one step shy of a shady mob guy providing protection you canâ€™t refuse. They skim a little out of your paycheck, go off and gamble with it in various investments, but ultimately provide some help should you ever encounter unfortunate health circumstances. How you feel about the whole relationship is for you to decide.Medical insurance is designed to be extremely confusing, but in all it simply boils down to splitting the cost of your medical expenses between yourself, the insurance company, often your employer, and sometimes the government. They do this in a mix of different and complicated healthcare plans that breakdown the expenses each in their own unique way. Some Things to Note FirstFirst off, there are a lot of overly complicated terms you should know when selecting an insurance. Hereâ€™s the breakdown if you donâ€™t already know them: Premium:This is usually the insurance fee you will pay per paycheck, or maybe a monthly fee if you are self-employed. itâ€™s the cyclical fee that you pay for your healthcare. Copay:In addition to your premium, a copay the cost you will pay each time you see a doctor. Insurance generally pays for some portion of your doctor visit, but wants you to pay for some portion as well, or else you could be at the doctor every week with any minor ache or pain. hence, they will co-pay with you for each of your visits. Deductible:Watch out for this one! Your insurance wonâ€™t pay anything until youâ€™ve already paid the deductible amount. So if your deductible is $1000, your insurance really wonâ€™t pay anything until you first have at least paid $1000 in medical expenses, typically for the year. Some plans are only designed to help you when crap really hits the fan, but if you spend far less than the deductible on healthcare per year, you may feel cheated that after all those premiums youâ€™ve paid, your health insurance still really covered none of your doctor visits. Max Out of Pocket:This is the total maximum amount you should have to personally pay for healthcare, typically per year. If you max out of pocket expenses is $3000, then once you have personally paid that much in healthcare expenses per year, your insurance should fully cover all of your remaining healthcare expenses for that year. This includes personal expenses before and after youâ€™ve reached your deductible. This will really help if your health takes a major turn for the worse as you will only pay up to that amount per year. In or Out of Network:The network is really just an ambiguous group of doctors that the insurance has, sort of, partnered with. If you go to a doctor in the network, the insurance company feels confident enough to pay more for your visit and you will pay less. If you choose someone outside you will pay more, or maybe even all of the cost of the visit. I say ambiguous because it always seems very difficult to tell whether a doctor is in or out of the network. When in doubt, call that number on your insurance card and double check, which brings us to the next important section. Whenever In Doubt, Call Your InsuranceAnnoy or become BFFs with your insurance customer service reps. I cannot emphasize this enough as it can save you money! If you are not sure that the doctor, urgent care, or hospital facility is covered, call and double check with these guys. Make sure you hear from the horseâ€™s mouth how much they will cover. Never trust the healthcare plan or system to work right, and double check any bill that you receive. All too often, I have received bills stating what I owe, only to call and hear from the insurance that they should be paying this. Understanding Your QuotesWhen choosing your healthcare plan you will see a cost breakdown for the general categories of healthcare visits. Some will be a dollar value and others often a percentage. Some are self explanatory, but hereâ€™s the breakdown. Preventative Care:A general checkup. Hopefully this should be free for you. Out Patient:This is generally when youâ€™re seeing a practice outside the hospital (e.g. doctor or lab visits). In Patient:This is generally for when you are in the hospital. Maternity:General costs of having a baby! Watch out as there may be special instructions here, like you must notify your insurance within a few months of pregnancy. Emergency Room:The cost of going to the emergency room, and itâ€™s generally pricey, so if you think your condition is not an emergency, try an Urgent Care center instead. Urgent Care:Cost to go to an urgent care facility. Prescription Drugs:Cost of drugs. The Typical Healthcare OptionsMore Traditional Healthcare Plans:These are the standard, age old insurance options. HMO (Health Maintenance Organization)This is typically a more all inclusive plan. Whatâ€™s great about them is that theyâ€™re typically lower in costs. General doctors, specialists, labs, hospitals, and pharmacies band together to try and reduce costs. What sucks about them is that sometimes it feels they reduce costs a little too much. They often wonâ€™t cover anything deemed cosmetic in nature, and they are extremely bureaucratic. In order to get the actual healthcare you need, youâ€™ll need to wait for permission, from a primary care doctor and your insurance, and youâ€™ll really only be able to see whoever they work with. Youâ€™ll basically sacrifice your time and freedom for a discount in price, which could both be critical when it comes to healthcare. PPO (Preferred Provider Organization)This is, in a way, the opposite of an HMO. You can see generally whoever you like! Go straight to the specialists and have coverage for generally much more. The catch - premiums are generally much more expensive. Also, be careful of knowing in vs. out of network , and which how high your deductible might be. Your cost could go from say 20% to 80% or more if out of network, and 100% if you havenâ€™t hit your deductible. Consumer Healthcare Plans:We like consumer healthcare options as it letâ€™s you decide more of what types of healthcare services you want to buy, and evaluate the value you are getting from them. Even better yet, the money is usually pre-tax so Uncle Sam wonâ€™t skim off your medical expenses! HRA (Health Reimbursement Arrangement)I personally like this option. itâ€™s generally like a high deductible PPO with cheaper premiums. So what does that mean? You get to see who you want to see, and pay a reasonable monthly fee. Your insurance wonâ€™t really cover anything until youâ€™ve paid a lot out of pocket, but what makes it all worth while is that your employer will reimburse a good chunk cash on your immediate healthcare expenses. Maybe around $500 for yourself, or $1500 for your family depending on the plan. So youâ€™ll pay nothing for the first portion of your healthcare expenses for the year. My experience is that the process is all quite automated so reimbursements arenâ€™t a painful process of forms or anything like a crappy appliance rebate. Youâ€™ll just pay nothing until youâ€™ve reached the reimbursement amount and the insurance takes care of the reimbursement allocation. After that, youâ€™ll pay for everything until you hit your deductible, but good newsâ€¦ the reimbursement amount counts toward your deductible. So if you run the numbers, even if you have the remaining high deductible, youâ€™ll still probably pay about the same as if you choose a PPO with higher monthly premiums. This is a great choice if you donâ€™t see a doctor often (e.g. 2 - 3 times a year). If you stay under the reimbursement amount for the year, youâ€™ll pay nothing, and the money left over often rolls over to the next year! HSA (Health Savings Account)Another good consumer healthcare option. Very similar to the HRA, but instead of a reimbursement, your employer just gives you a certain dollar value per year and puts it into a savings account for you. It usually becomes a personal bank account for you that you will keep even after you leave the plan. Unused money rolls over and also collects interest! FSA (Flexible Spending Account)This is not really a healthcare plan but still deserves to be mentioned. itâ€™s usually an added option with your healthcare plan. FSAs give you the option to allocate pre-taxed money from your paycheck for the yearly medical expenses. Sounds good but thereâ€™s a catchâ€¦ If you donâ€™t use the money by the end of the year, your employer will take it from you. Thatâ€™s a sort of red flag that Iâ€™ve never been able to get over. If you think you can predict and manage your healthcare expenses for the year, this may be a good way to save a few tax dollars. For me, itâ€™s not worth the headache. Closing ThoughtsUltimately the choice of healthcare is yours alone to decide, and be mindful that all plans are a little different and may not perfectly match this post. Also, regardless of what you choose, itâ€™s good to know the costs of your visits, which is still strangely so non-transparent. So do ask your providers for quotes, and always question your insurance when it comes to weird bills! Thanks for reading and feel free to subscribe or follow us on social medias! Subscribe to Email Updates Credits:Image courtesy of Maialisa on Pixabay","categories":[{"name":"Insurance","slug":"Insurance","permalink":"http://blog.submithealth.com/categories/Insurance/"}],"tags":[{"name":"Insurance, ConsumerHealth,","slug":"Insurance-ConsumerHealth","permalink":"http://blog.submithealth.com/tags/Insurance-ConsumerHealth/"}]},{"title":"Hi Friends!","slug":"welcome-friends","date":"2016-08-02T00:00:00.000Z","updated":"2016-08-07T17:48:57.429Z","comments":true,"path":"2016/08/02/welcome-friends/","link":"","permalink":"http://blog.submithealth.com/2016/08/02/welcome-friends/","excerpt":"","text":"Welcome to the SubmitHealth blog! As our first post, I thought I would share the overall goals and values of this blog. So, why we are here?Weâ€™re here to help in the search of healthcare that is: Cost effective Time effective Getâ€™s you patched up effectively! In short, we seek Effective Healthcare.For many of us here, our experience with the healthcare system can be summarized by: Lots of money spent Often no real resolve to healthcare issues Major takeawayâ€¦ See a doctor only when symptoms include verge of death Our hope is that it does not have to be this way. And we get it, understandably there isnâ€™t a magical solution to meet everyoneâ€™s healthcare needs, that is until they finally get that tricorder working. But until then, our hope is to identify opportunities and share practical solutions for getting healthcare delivered more effectively. So stay tuned, and thank you for reading. Best Regards, Andrew AkagawaWriter, Coder, Healthcare Nerd Stay Healthy, Stay HappyImage courtesy of SplitShire","categories":[],"tags":[{"name":"Introduction","slug":"Introduction","permalink":"http://blog.submithealth.com/tags/Introduction/"},{"name":"About","slug":"About","permalink":"http://blog.submithealth.com/tags/About/"},{"name":"Effective","slug":"Effective","permalink":"http://blog.submithealth.com/tags/Effective/"}]}]}